# DSF vs RF sampling

import matplotlib.pyplot as plt
import numpy as np
import csv


dataset = "adult"
sizePath = "../frequentTreesInRandomForests/SizeComparison"
resultsPath = "../tmp/reports/"
variant = "NoLeafEdges"
scoring_function = 'accuracy'
pattern_max_size = 6
accuracy_list = []
size_list = []

accuracy_list_dsf = []
size_list_dsf = []





size = np.array(size_list, dtype=np.float32)
accuracy = np.array(accuracy_list, dtype=np.float32)

size_dsf = np.array(size_list_dsf, dtype=np.float32)
accuracy_dsf = np.array(accuracy_list_dsf, dtype=np.float32)

accuracy_rf = [0.728,0.899,0.541,0.745,0.743,0.798,0.759]
deviation_rf = [0.019,0.024,0.021,0.1,0.014,0.015,0.056]
accuracy_dsf = [0.843,0.904,0.5,0.896,0.778,0.712,0.764]
datasets = ['adult','spambase','letter','bank','magic','mnist','satlog']

thresholds = [0.975,0.95,0.925,0.9,0.85,0.8,0.7,0.6]
accuracy_pruned = [0.836,0.834,0.833,0.83,0.826,0.806,0.787,0.789]
accuracy_samples = [0.827,0.825,0.801,0.796,0.775,0.763,0.709,0.67]
samples_dev = [0.009,0.007,0.02,0.018,0.027,0.021,0.037,0.028]

groups = ['Control']
#groups = ['Control','dic','se','dic + se']
dilatation_control = [0,1,1,1,2,1,1,2]
dilatation_dic = [3,3,3,3,3,3,3,3]
dilatation_se = [2,1,1,0,2,1,1,2]
dilatation_dic_se = [3,3,2,3,3,3,3]
mean_di_cont = np.mean(dilatation_control)
mean_di_dic = np.mean(dilatation_dic)
mean_di_se = np.mean(dilatation_se)
mean_di_dic_se = np.mean(dilatation_dic_se)
se_di_cont = np.std(dilatation_control,ddof = 1)/np.sqrt(8)
se_di_dic = np.std(dilatation_dic,ddof = 1)/np.sqrt(8)
se_di_se = np.std(dilatation_se,ddof = 1)/np.sqrt(8)
se_di_dic_se = np.std(dilatation_dic_se,ddof = 1)/np.sqrt(7)
print('Dilatation')
print(mean_di_cont)
print(se_di_cont)
print(mean_di_dic)
print(se_di_dic)
print(mean_di_se)
print(se_di_se)
print(mean_di_dic_se)
print(se_di_dic_se)





vacuolation_control = [1,1,2,1,1,0,0,1]
vacuolation_dic = [3,3,3,2,3,3,3,3]
vacuolation_se = [1,2,0,1,1,0,2,1]
vacuolation_dic_se = [3,2,2,2,2,3,2]
mean_va_cont = np.mean(vacuolation_control)
mean_va_dic = np.mean(vacuolation_dic)
mean_va_se = np.mean(vacuolation_se)
mean_va_dic_se = np.mean(vacuolation_dic_se)
se_va_cont = np.std(vacuolation_control,ddof = 1)/np.sqrt(8)
se_va_dic = np.std(vacuolation_dic,ddof = 1)/np.sqrt(8)
se_va_se = np.std(vacuolation_se,ddof = 1)/np.sqrt(8)
se_va_dic_se = np.std(vacuolation_dic_se,ddof = 1)/np.sqrt(7)


print('vacuolation')
print(mean_va_cont)
print(se_va_cont)
print(mean_va_dic)
print(se_va_dic)
print(mean_va_se)
print(se_va_se)
print(mean_va_dic_se)
print(se_va_dic_se)

dy_control = [0,0,0,0,0,1,1,1]
dy_dic = [3,2,2,3,3,3,2,1]
dy_se = [2,2,0,0,1,0,0,0]
dy_dic_se = [2,3,3,1,2,2,2]
mean_dy_cont = np.mean(dy_control)
mean_dy_dic = np.mean(dy_dic)
mean_dy_se = np.mean(dy_se)
mean_dy_dic_se = np.mean(dy_dic_se)
se_dy_cont = np.std(dy_control,ddof = 1)/np.sqrt(8)
se_dy_dic = np.std(dy_dic,ddof = 1)/np.sqrt(8)
se_dy_se = np.std(dy_se,ddof = 1)/np.sqrt(8)
se_dy_dic_se = np.std(dy_dic_se,ddof = 1)/np.sqrt(8)


print('nicrosis')
print(mean_dy_cont)
print(se_dy_cont)
print(mean_dy_dic)
print(se_dy_dic)
print(mean_dy_se)
print(se_dy_se)
print(mean_dy_dic_se)
print(se_dy_dic_se)


kb_control = [0,1,0,1,0,0,1,0]
kb_dic = [2,2,2,2,2,2,2,2]
kb_se = [0,1,1,0,0,1,1,0]
kb_dic_se = [0,2,2,2,2,2,2]
mean_kb_cont = np.mean(kb_control)
mean_kb_dic = np.mean(kb_dic)
mean_kb_se = np.mean(kb_se)
mean_kb_dic_se = np.mean(kb_dic_se)
se_kb_cont = np.std(kb_control,ddof = 1)/np.sqrt(8)
se_kb_dic = np.std(kb_dic,ddof = 1)/np.sqrt(8)
se_kb_se = np.std(kb_se,ddof = 1)/np.sqrt(8)
se_kb_dic_se = np.std(kb_dic_se,ddof = 1)/np.sqrt(7)


di = [mean_di_cont,mean_di_dic,mean_di_se,mean_di_dic_se]
sem = [se_di_cont,se_di_dic,se_di_se,se_di_dic_se]
#print(mean_de_cont)
#print(se_de_cont)
width = 0.16
space = 0.1
x_pos = np.arange(len(groups))
fig = plt.figure()
ax = fig.add_subplot(111)
#ax.bar(x_pos-width,accuracy_samples,width,yerr=samples_dev,color='b',label='Sampled', align='center', alpha=0.5, ecolor='black', capsize=10)
#ax.bar(x_pos,accuracy_pruned,width,color='r',label='Pruned')

ax.bar(x_pos-width,mean_di_cont,width,yerr=se_di_cont,color='b',label='Dilatation', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+5*width,mean_di_dic,width,yerr=se_di_dic,color='b', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+11*width,mean_di_se,width,yerr=se_di_se,color='b', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+17*width,mean_di_dic_se,width,yerr=se_di_dic_se,color='b', align='center', alpha=0.5, ecolor='black', capsize=10)

ax.bar(x_pos,mean_va_cont,width,yerr=se_va_cont,color='r', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+6*width,mean_va_dic,width,yerr=se_va_dic,color='r',label='Vacuolation', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+12*width,mean_va_se,width,yerr=se_va_se,color='r', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+18*width,mean_va_dic_se,width,yerr=se_va_dic_se,color='r', align='center', alpha=0.5, ecolor='black', capsize=10)

ax.bar(x_pos + width,mean_dy_cont,width,yerr=se_dy_cont,color='g', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+7*width,mean_dy_dic,width,yerr=se_dy_dic,color='g', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+13*width,mean_dy_se,width,yerr=se_dy_se,color='g',label='Necrosis', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+19*width,mean_dy_dic_se,width,yerr=se_dy_dic_se,color='g', align='center', alpha=0.5, ecolor='black', capsize=10)
#ax.bar(x_pos,accuracy_pruned,width,color='r',label='Pruned')
ax.bar(x_pos + 2 * width,mean_kb_cont,width,yerr=se_kb_cont,color='brown', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+8*width,mean_kb_dic,width,yerr=se_kb_dic,color='brown', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+14*width,mean_kb_se,width,yerr=se_kb_se,color='brown', align='center', alpha=0.5, ecolor='black', capsize=10)
ax.bar(x_pos+20*width,mean_kb_dic_se,width,yerr=se_kb_dic_se,color='brown',label='Glomerular Pathology', align='center', alpha=0.5, ecolor='black', capsize=10)

x = ['Control','Dic','Se','Dic + Se','']
y = [0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0]

default_x_ticks = range(len(x))
ax.set_xticks(default_x_ticks)
ax.set_xticklabels(x)
ax.set_yticks(y)
#ax.set_xlabel('Pruned features vs Sampled Features')
ax.set_ylabel('Injury Degree')
#ax.set_position([box.x0, box.y0, box.width * 0.90, box.height])
plt.legend(bbox_to_anchor=(0.3, -0.1), loc='upper left')
#plt.text(x_pos+13*width,3.1,'a')

#plt.plot(default_x_ticks, y)
#plt.xticks(default_x_ticks, x)
fig = plt.gcf()
fig.savefig(resultsPath+'groups.png', dpi=350)
fig.show()



